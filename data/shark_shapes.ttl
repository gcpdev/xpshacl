@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix gdl-shape: <http://dbpedia.org/gdl-shape#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .

gdl-shape:
  rdfs:label "SHACL for Ontology Guidelines"@en ;
  rdfs:comment "This graph is used to validate ontologies against pre-selected tests. "@en ;
  sh:declare [
    sh:prefix "rdfs" ;
    sh:namespace "http://www.w3.org/2000/01/rdf-schema#"^^xsd:anyURI ;
  ] ;
  sh:declare [
    sh:prefix "owl" ;
    sh:namespace "http://www.w3.org/2002/07/owl#"^^xsd:anyURI ;
  ] ;
  sh:declare [
    sh:prefix "rdf" ;
    sh:namespace "http://www.w3.org/1999/02/22-rdf-syntax-ns#"^^xsd:anyURI ;
  ] ;
  sh:declare [
    sh:prefix "gdl" ;
    sh:namespace "http://dbpedia.org/ontology-guidelines/"^^xsd:anyURI ;
  ] .

gdl-shape:ClassShape
a sh:Shape;
sh:targetClass owl:Class;
sh:targetSubjectsOf rdfs:subClassOf;
sh:property [
  sh:message "Classes must have a label";
  sh:path rdfs:label;
  sh:minCount 1;
  sh:dataType rdf:langString;
  sh:uniqueLang true; 
];

sh:property [
  sh:message "Classes must have a comment";
  sh:path rdfs:comment;
  sh:minCount 1;
  sh:dataType rdf:langString;
  sh:uniqueLang true;
];

sh:sparql [
  sh:message "Classes must have at most one superclass";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT DISTINCT $this
  WHERE {
    $this rdf:type owl:Class .
    $this rdfs:subClassOf ?v1 .
    $this rdfs:subClassOf ?v2 .
    FILTER NOT EXISTS {?v1 rdfs:subClassOf ?v2 }.
    FILTER NOT EXISTS {?v2 rdfs:subClassOf ?v1 }.
    FILTER(?v1 != ?v2) .
    FILTER(?v1 != owl:Thing) .
    FILTER(?v2 != owl:Thing) .
    FILTER($this != ?v1) .
    FILTER($this != ?v2) .
  }
  """;
];

sh:sparql [
  sh:message "Classes names must not start with a lowercase letter";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT $this 
  WHERE { 
    $this a owl:Class .
    BIND(REPLACE(STR($this), '/([a-z][1]?[A-z0-9]*)$', '' ) as ?str1) .
    FILTER(STR($this) != STR(?str1)) .
  }
  """;
];

sh:sparql [
  sh:message "Classes must have instances";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT DISTINCT ?value $this 
  WHERE { 
    $this a owl:Class .
    OPTIONAL { ?value a $this } .
  }
  GROUP BY $this ?value
  HAVING (COUNT(?value) = 0 )
  """;
];

sh:sparql [
  sh:message "Detect synonyms created as classes";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT $this 
  WHERE { 
    $this a owl:Class .
    $this owl:equivalentClass ?other
    BIND(REPLACE(STR($this), '(#|/)[^#/]*$', '$1' ) as ?ns1) .
    BIND(REPLACE(STR(?other), '(#|/)[^#/]*$', '$1' ) as ?ns2) .
    FILTER(?ns1 = ?ns2) .
  }
  """;
];

sh:sparql [
  sh:message "Detect unconnected classes";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT $this WHERE
  {
    $this a owl:Class .
    FILTER NOT EXISTS {$this rdfs:subClassOf ?any1} .
    FILTER NOT EXISTS {?any2 owl:equivalentClass $this} .
    FILTER NOT EXISTS {$this owl:equivalentClass ?any3} .
    FILTER NOT EXISTS {?any4 rdfs:subClassOf $this} .
    FILTER NOT EXISTS {?any5 rdfs:range $this} .
    FILTER NOT EXISTS {?any6 rdfs:domain $this} .
  }
  """;
];

sh:sparql [
  sh:message "Detect cycles in the class hierarchy";
  sh:select """
  PREFIX owl: <http://www.w3.org/2002/07/owl#>
  PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
  PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
  SELECT $this WHERE
  {
    $this a owl:Class .
    $this rdfs:subClassOf+ $this .
  }
  """;
] .



gdl-shape:PropertyShape
a sh:Shape;
sh:targetClass rdf:Property;
sh:targetClass owl:DatatypeProperty;
sh:targetClass owl:ObjectProperty;
sh:targetSubjectsOf rdfs:subPropertyOf;
sh:property [
sh:message "Properties must have a label";
sh:path rdfs:label;
sh:minCount 1;
sh:dataType rdf:langString;
sh:uniqueLang true; ];

sh:property [
sh:message "Properties must have a comment";
sh:path rdfs:comment;
sh:minCount 1;
sh:dataType rdf:langString;
sh:uniqueLang true; ];

sh:property [
sh:message "Properties must have at most one domain";
sh:path rdfs:domain;
sh:maxCount 1; ];

sh:property [
sh:message "Properties must have at least one domain, which is a class";
sh:path rdfs:domain;
sh:minCount 1;
sh:class owl:Class; ];

sh:property [
sh:message "Properties must have at most one range";
sh:path rdfs:range;
sh:maxCount 1; ];

sh:property [
sh:message "Properties must have at least one range, which is a class";
sh:path rdfs:range;
sh:minCount 1;
sh:class owl:Class; ];

sh:property [
sh:message "Properties must have at most one superproperty";
sh:path rdfs:subPropertyOf;
sh:maxCount 1; ];

sh:sparql [
sh:message "Properties names must not start with a capital letter";
sh:select """
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT $this 
WHERE { 
  $this a ?property .
  FILTER(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .
  BIND(REPLACE(STR($this), '/[A-Z][A-z0-9]*$', '' ) as ?str1) .
  FILTER(STR($this) != STR(?str1)) .
}
""";
];

sh:sparql [
sh:message "Detect relationships inverse to themselves";
sh:select """
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT $this 
WHERE { 
  $this a ?property .
  $this owl:inverseOf $this .
  FILTER(?property IN (rdf:Property, owl:DatatypeProperty, owl:ObjectProperty)) .
}
""";
];

sh:sparql [
sh:message "Detect wrongly defined relationship 'is'";
sh:select """
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
SELECT $this 
WHERE { 
  $this a owl:ObjectProperty .
  BIND(REPLACE(STR($this), 'isA', '' ) as ?str1) .
  BIND(REPLACE(STR($this), 'is-a', '' ,'i') as ?str2) .
  BIND(REPLACE(STR($this), 'is_a', '' ,'i') as ?str3) .
  FILTER(STR($this) != STR(?str1) || STR($this) != STR(?str2) || STR($this) != STR(?str3)) .
}
""";
] .